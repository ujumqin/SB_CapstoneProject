aforandred_test <- subset(a_forandred_predict, aforandred_split == TRUE)
aforandred_train <- subset(a_forandred_predict, aforandred_split == FALSE)
CARTMODELMAKER <- function(traindata) {
cartmodel1 <- rpart(negative~., data = traindata, method = "class")
return(cartmodel1)
}
fitOWControl = trainControl(method="cv",number=10)
cartGrid <- expand.grid(.cp=(1:50)*0.00001)
cpmaker <- function(traindata,fold,increment) {
fitOWControl = trainControl(method="cv",number=fold)
cartGrid <- expand.grid(.cp=(1:50)*increment)
cpvalue <- train(negative ~., data=traindata, method="rpart", trControl=fitOWControl, tuneGrid=cartGrid)
return(cpvalue)
}
CARTMODEL2 <- function(traindata, cp) {
cartmodel2train <-  rpart(negative ~., data=traindata, method="class",control=rpart.control(cp=cp))
}
RFMODEL <- function(trainingset) {
randomforestmodel <- randomForest(negative ~., data = trainingset)
}
CARTMODELTEST <- function(model,testdata) {
predictmodel <- predict(model, newdata=testdata, type="class")
return(predictmodel)
}
tablechecker <- function(testdata, modelresults) {
tablecheck <- table(testdata$negative, modelresults)
confusionMatrix(tablecheck)
}
bingforummodel1 <- CARTMODELMAKER(bforum_train)
bingredditmodel1 <- CARTMODELMAKER(breddit_train)
bingforandredmode1l <- CARTMODELMAKER(bforandred_train)
prp(bingforummodel)
prp(bingforummodel1)
prp(bingredditmodel1)
prp(bingforummodel1)
bingforumtest1 <- CARTMODELTEST(bingforummodel1, bforum_test)
tablechecker(bforum_test, bingforumtest1)
bingreddittest1 <- CARTMODELTEST(bingredditmodel1, breddit_test)
tablechecker(breddit_test, bingreddittest1)
bingforandred1 <- CARTMODELTEST(bingforandredmode1l, bforandred_test)
tablechecker(bforandred_test, bingforandred1)
afinnforummodel1 <- CARTMODELMAKER(aforum_train)
afinnredditmodel1 <- CARTMODELMAKER(areddit_train)
afinnforandredmode1l <- CARTMODELMAKER(aforandred_train)
prp(afinnforummodel1)
prp(afinnredditmodel1)
prp(afinnforandredmode1l)
afinnforumtest1 <- CARTMODELTEST(afinnforummodel1, bforum_test)
afinnforumtest1 <- CARTMODELTEST(afinnforummodel1, aforum_test)
tablechecker(aforum_test, afinnforumtest1)
afinnreddittest1 <- CARTMODELTEST(afinnredditmodel1, areddit_test)
tablechecker(areddit_test, afinnreddittest1)
afinnforandred1 <- CARTMODELTEST(afinnforandredmode1l, aforandred_test)
tablechecker(aforandred_test, afinnforandred1)
cpbforums <- cpmaker(bforum_train, 10, 0.002)
cpbreddit <- cpmaker(breddit_train, 10, 0.002)
cpbforandred <- cpmaker(bforandred_train, 10, 0.001)
cpbforums
cpbreddit
cpbforandred
bingforummodel2 <- CARTMODEL2(bforum_train, 0.002)
bingredditmodel2 <- CARTMODEL2(breddit_train, 0.002)
bingforandredmodel2 <- CARTMODEL2(bforandred_train, 0.003)
prp(bingforummodel2)
prp(bingredditmodel2)
prp(bingforandredmodel2)
bingforumtest2 <- CARTMODELTEST(bingforummodel2, bforum_test)
tablechecker(bforum_test, bingforumtest2)
bingreddittest2 <- CARTMODELTEST(bingredditmodel2, breddit_test)
tablechecker(breddit_test, bingreddittest2)
bingforandredmodel2 <- CARTMODELTEST(bingforandredmodel2, bforandred_test)
tablechecker(bforandred_test, bingforandredmodel2)
cpaforums <- cpmaker(aforum_train, 10, 0.002)
cpareddit <- cpmaker(areddit_train, 10, 0.002)
cpaforandred <- cpmaker(aforandred_train, 10, 0.002)
cpaforums
cpareddit
cpaforandred <- cpmaker(aforandred_train, 10, 0.002)
cpaforandred
cpaforums <- cpmaker(aforum_train, 10, 0.0001)
cpaforums
cpareddit <- cpmaker(areddit_train, 10, 0.0001)
cpaforandred <- cpmaker(aforandred_train, 10, 0.0001)
cpareddit
cpaforandred
afinnforummodel2 <- CARTMODEL2(aforum_train, 0.0012)
afinnredditmodel2 <- CARTMODEL2(areddit_train, 0.0003)
afinnforandredmodel2 <- CARTMODEL2(aforandred_train, 0.0011)
prp(afinnforummodel2)
prp(afinnforummodel2)
prp(afinnredditmodel2)
prp(afinnforandredmodel2)
afinnforumtest2 <- CARTMODELTEST(afinnforummodel2, aforum_test)
tablechecker(aforum_test, afinnforumtest2)
afinnreddittest2 <- CARTMODELTEST(afinnredditmodel2, areddit_test)
tablechecker(areddit_test, afinnreddittest2)
afinnforandredmodel2 <- CARTMODELTEST(afinnforandredmodel2, aforandred_test)
tablechecker(aforandred_test, afinnforandredmodel2)
bingforummodel3 <- RFMODEL(bforum_train)
bingredditmodel3 <- RFMODEL(breddit_train)
bingforandredmodel3 <- RFMODEL(bforandred_train)
afinnforummodel3 <- RFMODEL(aforum_train)
afinnredditmodel3 <- RFMODEL(areddit_train)
afinnforandredmodel3 <- RFMODEL(aforandred_train)
bingforumtest3 <- CARTMODELTEST(bingforummodel3, bforum_test)
tablechecker(bforum_test, bingforumtest3)
bingreddittest3 <- CARTMODELTEST(bingredditmodel3, breddit_train)
tablechecker(breddit_train, bingreddittest3)
bingforandredtest3 <- CARTMODELTEST(bingforandredmodel3, bforandred_train)
tablechecker(bforandred_train, bingforandredtest3)
afinnforumtest3 <- CARTMODELTEST(afinnforummodel3, aforum_train)
afinnforumtest3 <- CARTMODELTEST(afinnforummodel3, aforum_train)
tablechecker(aforum_train, afinnforumtest3)
afinnforummodel3 <- RFMODEL(aforum_train)
afinnforummodel3 <- randomForest(negative ~., data = aforum_train)
y
afinnforummodel3 <- randomForest(negative ~., data=aforum_train)
aforum_train= factor(aforum_train)
afinnforummodel3 <- randomForest(negative ~., data=aforum_train)
b_forum_predict
a_forum_predict
bforum_test
bforum_train
aforum_split
aforum_test
aforum_train
bforum_train
negative
afinn_maker <- function(tidy_data) {
afinn_data <- tidy_data %>%
inner_join(get_sentiments("afinn"))
#create this column to help calculate sentiment score
afinn_data$count <- 1
#calculate sentiment score using afinn
afinn_data <- afinn_data %>%
group_by(text_topic) %>%
mutate(sentimentscore = sum(score)/sum(count))
#collapse the duplicated columns by text_topic
afinn_data <- afinn_data[!duplicated(afinn_data$text_topic),]
afinn_data <- data.frame(afinn_data$text_topic, afinn_data$sentimentscore)
names(afinn_data) <- c("forum_text","sentiment_score")
afinn_data$negative <- as.factor(0)
#for loops codes the sentiment from bing sentiment into a -1 or 1. 1 is positive and -1 is negative. Also counts the number of sentiment words to be used later.
for(i in 1:length(afinn_data$sentiment_score)) {
if(afinn_data$sentiment_score[i] < 0) {
afinn_data$negative[i] = "TRUE"
} else {
afinn_data$negative[i] = "FALSE"
}
}
return(afinn_data)
}
forum_afinn <- afinn_maker(tidy_forums)
afinn_maker <- function(tidy_data) {
afinn_data <- tidy_data %>%
inner_join(get_sentiments("afinn"))
#create this column to help calculate sentiment score
afinn_data$count <- 1
#calculate sentiment score using afinn
afinn_data <- afinn_data %>%
group_by(text_topic) %>%
mutate(sentimentscore = sum(score)/sum(count))
#collapse the duplicated columns by text_topic
afinn_data <- afinn_data[!duplicated(afinn_data$text_topic),]
afinn_data <- data.frame(afinn_data$text_topic, afinn_data$sentimentscore)
names(afinn_data) <- c("forum_text","sentiment_score")
afinn_data$negative <- 0
#for loops codes the sentiment from bing sentiment into a -1 or 1. 1 is positive and -1 is negative. Also counts the number of sentiment words to be used later.
for(i in 1:length(afinn_data$sentiment_score)) {
if(afinn_data$sentiment_score[i] < 0) {
afinn_data$negative[i] = "TRUE"
} else {
afinn_data$negative[i] = "FALSE"
}
}
return(afinn_data)
}
forum_afinn <- afinn_maker(tidy_forums)
forum_afinn
bing_data$negative
str(forum_bing)
str(forum_afinn)
forum_afinn$negative <- as.factor(forum_afinn$negative)
str(forum_afinn)
str(forum_bing)
afinnforummodel3 <- RFMODEL(aforum_train)
aforum_split <- sample.split(a_forum_predict$negative, SplitRatio = sr)
aforum_test <- subset(a_forum_predict, aforum_split == TRUE)
aforum_train <- subset(a_forum_predict, aforum_split == FALSE)
areddit_split <- sample.split(a_reddit_predict$negative, SplitRatio = sr)
areddit_test <- subset(a_reddit_predict, areddit_split == TRUE)
areddit_train <- subset(a_reddit_predict, areddit_split == FALSE)
aforandred_split <- sample.split(a_forandred_predict$negative, SplitRatio = sr)
aforandred_test <- subset(a_forandred_predict, aforandred_split == TRUE)
aforandred_train <- subset(a_forandred_predict, aforandred_split == FALSE)
aforum_corpus <- corpus_maker(forum_afinn)
areddit_corpus <- corpus_maker(reddit_afinn)
aforandred_corpus <- corpus_maker(forandred_afinn)
a_forum_predict <- process_corpus(aforum_corpus, forum_afinn)
a_reddit_predict <- process_corpus(areddit_corpus, reddit_afinn)
a_forandred_predict <- process_corpus(aforandred_corpus, forandred_afinn)
aforum_split <- sample.split(a_forum_predict$negative, SplitRatio = sr)
aforum_test <- subset(a_forum_predict, aforum_split == TRUE)
aforum_train <- subset(a_forum_predict, aforum_split == FALSE)
areddit_split <- sample.split(a_reddit_predict$negative, SplitRatio = sr)
areddit_test <- subset(a_reddit_predict, areddit_split == TRUE)
areddit_train <- subset(a_reddit_predict, areddit_split == FALSE)
aforandred_split <- sample.split(a_forandred_predict$negative, SplitRatio = sr)
aforandred_test <- subset(a_forandred_predict, aforandred_split == TRUE)
aforandred_train <- subset(a_forandred_predict, aforandred_split == FALSE)
afinnforummodel3 <- RFMODEL(aforum_train)
reddit_afinn$negative <- as.factor(reddit_afinn$negative)
forandred_afinn$negative <- as.factor(forandred_afinn$negative)
afinnforumtest3 <- CARTMODELTEST(afinnforummodel3, aforum_train)
tablechecker(aforum_train, afinnforumtest3)
aforum_corpus <- corpus_maker(forum_afinn)
areddit_corpus <- corpus_maker(reddit_afinn)
aforandred_corpus <- corpus_maker(forandred_afinn)
a_forum_predict <- process_corpus(aforum_corpus, forum_afinn)
a_reddit_predict <- process_corpus(areddit_corpus, reddit_afinn)
a_forandred_predict <- process_corpus(aforandred_corpus, forandred_afinn)
aforum_split <- sample.split(a_forum_predict$negative, SplitRatio = sr)
aforum_test <- subset(a_forum_predict, aforum_split == TRUE)
aforum_train <- subset(a_forum_predict, aforum_split == FALSE)
areddit_split <- sample.split(a_reddit_predict$negative, SplitRatio = sr)
areddit_test <- subset(a_reddit_predict, areddit_split == TRUE)
areddit_train <- subset(a_reddit_predict, areddit_split == FALSE)
aforandred_split <- sample.split(a_forandred_predict$negative, SplitRatio = sr)
aforandred_test <- subset(a_forandred_predict, aforandred_split == TRUE)
aforandred_train <- subset(a_forandred_predict, aforandred_split == FALSE)
afinnredditmodel3 <- RFMODEL(areddit_train)
afinnforandredmodel3 <- RFMODEL(aforandred_train)
afinnforumtest3 <- CARTMODELTEST(afinnforummodel3, aforum_train)
bingforumtest3 <- CARTMODELTEST(bingforummodel3, bforum_test)
tablechecker(bforum_test, bingforumtest3)
bingreddittest3 <- CARTMODELTEST(bingredditmodel3, breddit_test)
tablechecker(breddit_test, bingreddittest3)
bingforandredtest3 <- CARTMODELTEST(bingforandredmodel3, bforandred_test)
tablechecker(bforandred_test, bingforandredtest3)
afinnforumtest3 <- CARTMODELTEST(afinnforummodel3, aforum_test)
tablechecker(aforum_test, afinnforumtest3)
afinnreddittest3 <- CARTMODELTEST(afinnredditmodel3, areddit_test)
tablechecker(areddit_test, afinnreddittest3)
afinnforandredtest3 <- CARTMODELTEST(afinnforandredmodel3, aforandred_test)
tablechecker(aforandred_test, afinnforandredtest3)
tablechecker(aforandred_test, afinnforandredtest3)
tablechecker(bforandred_test, bingforandredtest3)
bingforumtest3 <- CARTMODELTEST(bingforummodel3, breddit_test)
tablechecker(breddit_test, bingforumtest3)
bingreddittest3 <- CARTMODELTEST(bingredditmodel3, bforum_test)
tablechecker(bforum_test, bingreddittest3)
tablechecker(bforum_test, bingforumtest1)
tablechecker(bforum_test, bingforumtest2)
tablechecker(bforum_test, bingforumtest3)
tablechecker(breddit_test, bingreddittest1)
tablechecker(breddit_test, bingreddittest2)
tablechecker(breddit_test, bingreddittest3)
tablechecker(bforandred_test, bingforandred1)
tablechecker(bforandred_test, bingforandredmodel2)
tablechecker(bforandred_test, bingforandredtest3)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(aforum_test, afinnforumtest2)
tablechecker(aforum_test, afinnforumtest3)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(aforum_test, afinnforumtest2)
tablechecker(aforum_test, afinnforumtest3)
tablechecker(areddit_test, afinnreddittest1)
tablechecker(areddit_test, afinnreddittest2)
tablechecker(areddit_test, afinnreddittest3)
tablechecker(aforandred_test, afinnforandred1)
tablechecker(aforandred_test, afinnforandredmodel2)
tablechecker(aforandred_test, afinnforandredtest3)
library(dplyr)
library(tidytext)
library(tm)
library(caTools)
library(rpart.plot)
library(e1071)
library(caret)
library(randomForest)
forums <- read.csv("OWFORUMS12_22_FINAL.csv", stringsAsFactors = FALSE)
reddit <- read.csv("REDDIT_12_22_FINAL.csv", stringsAsFactors = FALSE)
forandred <- read.csv("OWFORUMS&REDDIT_12_22_FINAL.csv", stringsAsFactors = FALSE)
forums$text_topic <- forums$text
reddit$text_topic <- reddit$X.text.
forandred$text_topic <- forandred$text
tidy_forums <- forums %>%
group_by(text_topic) %>%
mutate(linenumber = row_number()) %>%
unnest_tokens(word, text) %>%
ungroup()
tidy_reddit <- reddit %>%
group_by(text_topic) %>%
mutate(linenumber = row_number()) %>%
unnest_tokens(word, X.text.) %>%
ungroup()
tidy_forandred <- forandred %>%
group_by(text_topic) %>%
mutate(linenumber = row_number()) %>%
unnest_tokens(word, text) %>%
ungroup()
bing_maker <- function(tidy_data) {
bing_data <- tidy_data %>%
inner_join(get_sentiments("bing"))
#create new columns to use in for loop calculations. we will calculate the sentiment score by adding all the sentiments and dividing by number of sentiments.
bing_data$score <- 0
bing_data$count <- 1
#for loops codes the sentiment from bing sentiment into a -1 or 1. 1 is positive and -1 is negative. Also counts the number of sentiment words to be used later.
for(i in 1:length(bing_data$sentiment)) {
if(bing_data$sentiment[i] == "negative") {
bing_data$score[i] = -1
} else {
bing_data$score[i] = 1
}
}
#calculates the sentiment score by adding up all sentiment values and dividing it by the total for a single post. text_topic is used since it identifies if a word belongs to a single comment.
bing_data <- bing_data %>%
group_by(text_topic) %>%
mutate(sentimentscore = sum(score)/sum(count))
#identify the negative values. used later to predict negative sentiment
bing_data$negative <- as.factor(bing_data$sentimentscore < 0)
#collapse the duplicated columns by text_topic
bing_data <- bing_data[!duplicated(bing_data$text_topic),]
bing_data <- data.frame(bing_data$text_topic, bing_data$sentimentscore, bing_data$negative)
names(bing_data) <- c("forum_text","sentiment_score","negative")
return(bing_data)
}
forum_bing <- bing_maker(tidy_forums)
reddit_bing <- bing_maker(tidy_reddit)
forandred_bing <- bing_maker(tidy_forandred)
afinn_maker <- function(tidy_data) {
afinn_data <- tidy_data %>%
inner_join(get_sentiments("afinn"))
#create this column to help calculate sentiment score
afinn_data$count <- 1
#calculate sentiment score using afinn
afinn_data <- afinn_data %>%
group_by(text_topic) %>%
mutate(sentimentscore = sum(score)/sum(count))
#collapse the duplicated columns by text_topic
afinn_data <- afinn_data[!duplicated(afinn_data$text_topic),]
afinn_data <- data.frame(afinn_data$text_topic, afinn_data$sentimentscore)
names(afinn_data) <- c("forum_text","sentiment_score")
afinn_data$negative <- 0
#for loops codes the sentiment from bing sentiment into a -1 or 1. 1 is positive and -1 is negative. Also counts the number of sentiment words to be used later.
for(i in 1:length(afinn_data$sentiment_score)) {
if(afinn_data$sentiment_score[i] < 0) {
afinn_data$negative[i] = "TRUE"
} else {
afinn_data$negative[i] = "FALSE"
}
}
return(afinn_data)
}
forum_afinn <- afinn_maker(tidy_forums)
forum_afinn$negative <- as.factor(forum_afinn$negative)
reddit_afinn <- afinn_maker(tidy_reddit)
reddit_afinn$negative <- as.factor(reddit_afinn$negative)
forandred_afinn <- afinn_maker(tidy_forandred)
forandred_afinn$negative <- as.factor(forandred_afinn$negative)
corpus_maker <- function(sentiment_data) {
data_corpus <- Corpus(VectorSource(sentiment_data$forum_text))
data_corpus <- tm_map(data_corpus, removePunctuation)
data_corpus <- tm_map(data_corpus, tolower)
data_corpus <- tm_map(data_corpus, removeWords, stopwords("english"))
data_corpus <- tm_map(data_corpus, stemDocument)
return(data_corpus)
}
bforum_corpus <- corpus_maker(forum_bing)
breddit_corpus <- corpus_maker(reddit_bing)
bforandred_corpus <- corpus_maker(forandred_bing)
aforum_corpus <- corpus_maker(forum_afinn)
areddit_corpus <- corpus_maker(reddit_afinn)
aforandred_corpus <- corpus_maker(forandred_afinn)
process_corpus <- function(corpus_name, bing_name) {
#Find frequencies of words
freq <- DocumentTermMatrix(corpus_name)
#removing the sparse terms
sparse <- removeSparseTerms(freq, 0.995)
#convert sparse data into a data frame
sparse <- as.data.frame(as.matrix(sparse))
#converts variable names to appropriate names (some may start with numbers)
colnames(sparse) = make.names(colnames(sparse))
#add dependent variable to the dataframe. We will be predicting this value.
sparse$negative <- bing_name$negative
return(sparse)
}
b_forum_predict <- process_corpus(bforum_corpus, forum_bing)
b_reddit_predict <- process_corpus(breddit_corpus, reddit_bing)
b_forandred_predict <- process_corpus(bforandred_corpus, forandred_bing)
a_forum_predict <- process_corpus(aforum_corpus, forum_afinn)
a_reddit_predict <- process_corpus(areddit_corpus, reddit_afinn)
a_forandred_predict <- process_corpus(aforandred_corpus, forandred_afinn)
set.seed(1113)
sr <- 0.2
bforum_split <- sample.split(b_forum_predict$negative, SplitRatio = sr)
bforum_test <- subset(b_forum_predict, bforum_split == TRUE)
bforum_train <- subset(b_forum_predict, bforum_split == FALSE)
breddit_split <- sample.split(b_reddit_predict$negative, SplitRatio = sr)
breddit_test <- subset(b_reddit_predict, breddit_split == TRUE)
breddit_train <- subset(b_reddit_predict, breddit_split == FALSE)
bforandred_split <- sample.split(b_forandred_predict$negative, SplitRatio = sr)
bforandred_test <- subset(b_forandred_predict, bforandred_split == TRUE)
bforandred_train <- subset(b_forandred_predict, bforandred_split == FALSE)
aforum_split <- sample.split(a_forum_predict$negative, SplitRatio = sr)
aforum_test <- subset(a_forum_predict, aforum_split == TRUE)
aforum_train <- subset(a_forum_predict, aforum_split == FALSE)
areddit_split <- sample.split(a_reddit_predict$negative, SplitRatio = sr)
areddit_test <- subset(a_reddit_predict, areddit_split == TRUE)
areddit_train <- subset(a_reddit_predict, areddit_split == FALSE)
aforandred_split <- sample.split(a_forandred_predict$negative, SplitRatio = sr)
aforandred_test <- subset(a_forandred_predict, aforandred_split == TRUE)
aforandred_train <- subset(a_forandred_predict, aforandred_split == FALSE)
CARTMODELMAKER <- function(traindata) {
cartmodel1 <- rpart(negative~., data = traindata, method = "class")
return(cartmodel1)
}
fitOWControl = trainControl(method="cv",number=10)
cartGrid <- expand.grid(.cp=(1:50)*0.00001)
cpmaker <- function(traindata,fold,increment) {
fitOWControl = trainControl(method="cv",number=fold)
cartGrid <- expand.grid(.cp=(1:50)*increment)
cpvalue <- train(negative ~., data=traindata, method="rpart", trControl=fitOWControl, tuneGrid=cartGrid)
return(cpvalue)
}
CARTMODEL2 <- function(traindata, cp) {
cartmodel2train <-  rpart(negative ~., data=traindata, method="class",control=rpart.control(cp=cp))
}
RFMODEL <- function(trainingset) {
randomforestmodel <- randomForest(negative ~., data = trainingset)
}
CARTMODELTEST <- function(model,testdata) {
predictmodel <- predict(model, newdata=testdata, type="class")
return(predictmodel)
}
tablechecker <- function(testdata, modelresults) {
tablecheck <- table(testdata$negative, modelresults)
confusionMatrix(tablecheck)
}
cpbforums <- cpmaker(bforum_train, 10, 0.002)
cpaforums <- cpmaker(aforum_train, 10, 0.0001)
cpareddit <- cpmaker(areddit_train, 10, 0.0001)
cpaforandred <- cpmaker(aforandred_train, 10, 0.0001)
cpaforums
cpareddit
cpaforandred
source('~/SBCapstone/Final Project Files/Analyzer/ow_sentiment_predictor_final.R', echo=TRUE)
bingforandredmodel2 <- CARTMODEL2(bforandred_train, 0.003)
prp(bingforandredmodel2)
bingforandredtest2 <- CARTMODELTEST(bingforandredmodel2, bforandred_test)
bingforandredtest1 <- CARTMODELTEST(bingforandredmode1l, bforandred_test)
tablechecker(bforandred_test, bingforandredtest1)
tablechecker(bforandred_test, bingforandredtest2)
tablechecker(bforandred_test, bingforandredtest3)
afinnforandredtest1 <- CARTMODELTEST(afinnforandredmode1l, aforandred_test)
afinnforandredmodeltest2 <- CARTMODELTEST(afinnforandredmodel2, aforandred_test)
afinnforandredmodel2 <- CARTMODEL2(aforandred_train, 0.0012)
afinnforandredmodeltest2 <- CARTMODELTEST(afinnforandredmodel2, aforandred_test)
tablechecker(aforandred_test, afinnforandredtest2)
afinnforandredtest2 <- CARTMODELTEST(afinnforandredmodel2, aforandred_test)
tablechecker(aforandred_test, afinnforandredtest1)
tablechecker(aforandred_test, afinnforandredtest2)
tablechecker(aforandred_test, afinnforandredtest3)
tablechecker(aforandred_test, afinnforandredtest1)
tablechecker(aforandred_test, afinnforandredtest2)
tablechecker(aforandred_test, afinnforandredtest3)
source('~/SBCapstone/Final Project Files/Analyzer/ow_sentiment_predictor_final.R', echo=TRUE)
tablechecker(bforum_test, bingforumtest1)
tablechecker(breddit_test, bingreddittest1)
tablechecker(bforandred_test, bingforandredtest1)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(areddit_test, afinnreddittest1)
tablechecker(aforandred_test, afinnforandredtest1)
tablechecker(bforum_test, bingforumtest1)
tablechecker(breddit_test, bingreddittest1)
tablechecker(bforandred_test, bingforandredtest1)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(areddit_test, afinnreddittest1)
tablechecker(aforandred_test, afinnforandredtest1)
tablechecker(bforum_test, bingforumtest2)
tablechecker(bforum_test, bingforumtest3)
tablechecker(breddit_test, bingreddittest2)
tablechecker(breddit_test, bingreddittest3)
tablechecker(breddit_test, bingreddittest2)
tablechecker(breddit_test, bingreddittest3)
tablechecker(bforandred_test, bingforandredtest1)
tablechecker(bforum_test, bingforumtest1)
tablechecker(bforum_test, bingforumtest2)
tablechecker(bforum_test, bingforumtest3)
tablechecker(breddit_test, bingreddittest1)
tablechecker(breddit_test, bingreddittest2)
tablechecker(breddit_test, bingreddittest3)
tablechecker(bforandred_test, bingforandredtest1)
tablechecker(bforandred_test, bingforandredtest2)
tablechecker(bforandred_test, bingforandredtest3)
tablechecker(aforum_test, afinnforumtest1)
tablechecker(aforum_test, afinnforumtest2)
tablechecker(aforum_test, afinnforumtest3)
tablechecker(areddit_test, afinnreddittest1)
tablechecker(areddit_test, afinnreddittest2)
tablechecker(aforum_test, afinnforumtest3)
tablechecker(areddit_test, afinnreddittest1)
tablechecker(aforandred_test, afinnforandredtest1)
tablechecker(aforandred_test, afinnforandredtest2)
tablechecker(aforandred_test, afinnforandredtest3)
tablechecker(bforum_test, bingforumtest3)
tablechecker(breddit_test, bingreddittest3)
tablechecker(bforandred_test, bingforandredtest3)
tablechecker(aforum_test, afinnforumtest3)
tablechecker(areddit_test, afinnreddittest3)
tablechecker(aforandred_test, afinnforandredtest3)
